// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;


[uFrame.Attributes.ActionTitle("Add Scroller Component")]
public class AddScrollerAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Single ScrollSpeed;
    
    [uFrame.Attributes.In()]
    public Boolean IsScrolling;
    
    public override bool Execute() {
        Beside.gameObject.AddComponent<Scroller>();
        return base.Execute();
    }
}

[uFrame.Attributes.ActionTitle("Publish ToggleScrolling")]
public class PublishToggleScrollingAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public Boolean On;
    
    public override bool Execute() {
        var evt = new ToggleScrolling();
        evt.On = On;
        System.Publish(evt);
        return base.Execute();
    }
}

[uFrame.Attributes.ActionTitle("Add DestroyWhenInvisible Component")]
public class AddDestroyWhenInvisibleAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override bool Execute() {
        Beside.gameObject.AddComponent<DestroyWhenInvisible>();
        return base.Execute();
    }
}

[uFrame.Attributes.ActionTitle("Add ResetWhenInvisible Component")]
public class AddResetWhenInvisibleAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Vector3 StartPosition;
    
    public override bool Execute() {
        Beside.gameObject.AddComponent<ResetWhenInvisible>();
        return base.Execute();
    }
}
