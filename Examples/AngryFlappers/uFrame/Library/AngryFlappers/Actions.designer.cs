// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;


[uFrame.Attributes.ActionTitle("Publish GameOver")]
public class PublishGameOverAction : uFrame.Actions.UFAction {
    
    public override void Execute() {
        var evt = new GameOver();
        System.Publish(evt);

    }
}

[uFrame.Attributes.ActionTitle("Add Bird Component")]
public class AddBirdAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Vector3 Velocity;
    
    [uFrame.Attributes.In()]
    public Boolean DidFlap;
    
    [uFrame.Attributes.In()]
    public Int32 MaxSpeed;
    
    [uFrame.Attributes.In()]
    public Single FlapVelocity;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<Bird>();

    }
}

[uFrame.Attributes.ActionTitle("Publish BirdDied")]
public class PublishBirdDiedAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public Int32 Bird;
    
    public override void Execute() {
        var evt = new BirdDied();
        evt.Bird = Bird;
        System.Publish(evt);

    }
}

[uFrame.Attributes.ActionTitle("Add Deadly Component")]
public class AddDeadlyAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<Deadly>();

    }
}

[uFrame.Attributes.ActionTitle("Add Flapping Component")]
public class AddFlappingAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<Flapping>();

    }
}

[uFrame.Attributes.ActionTitle("Publish StartPlaying")]
public class PublishStartPlayingAction : uFrame.Actions.UFAction {
    
    public override void Execute() {
        var evt = new StartPlaying();
        System.Publish(evt);

    }
}

[uFrame.Attributes.ActionTitle("Add DestroyOnPlay Component")]
public class AddDestroyOnPlayAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<DestroyOnPlay>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add ResetPositionOnPlay Component")]
public class AddResetPositionOnPlayAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Vector3 StartPosition;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<ResetPositionOnPlay>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add ResetRotationOnPlay Component")]
public class AddResetRotationOnPlayAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Vector3 StartRotation;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<ResetRotationOnPlay>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add AngryFlappersGame Component")]
public class AddAngryFlappersGameAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<AngryFlappersGame>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add SpawnRandomly Component")]
public class AddSpawnRandomlyAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    [uFrame.Attributes.In()]
    public Int32 Seconds;
    
    [uFrame.Attributes.In()]
    public Single MinY;
    
    [uFrame.Attributes.In()]
    public Single MaxY;
    
    [uFrame.Attributes.In()]
    public IDisposable Timer;
    
    [uFrame.Attributes.In()]
    public String PoolName;
    
    [uFrame.Attributes.In()]
    public String PrefabName;
    
    [uFrame.Attributes.In()]
    public Vector3 StartPosition;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<SpawnRandomly>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add Pipe Component")]
public class AddPipeAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<Pipe>();
 
    }
}

[uFrame.Attributes.ActionTitle("Add DestroyOnGameOver Component")]
public class AddDestroyOnGameOverAction : uFrame.Actions.UFAction {
    
    [uFrame.Attributes.In()]
    public uFrame.ECS.EcsComponent Beside;
    
    public override void Execute() {
        Beside.gameObject.AddComponent<DestroyOnGameOver>();
 
    }
}
