// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Invert.uFrame.ECS {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Invert.Core.GraphDesigner;
    
    
    public class ComponentNodeDrawerBase : GenericNodeDrawer<ComponentNode,ComponentNodeViewModel> {
        
        public ComponentNodeDrawerBase(ComponentNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class SystemNodeDrawerBase : GenericNodeDrawer<SystemNode,SystemNodeViewModel> {
        
        public SystemNodeDrawerBase(SystemNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ItemTypesNodeDrawerBase : GenericNodeDrawer<ItemTypesNode,ItemTypesNodeViewModel> {
        
        public ItemTypesNodeDrawerBase(ItemTypesNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EventNodeDrawerBase : GenericNodeDrawer<EventNode,EventNodeViewModel> {
        
        public EventNodeDrawerBase(EventNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class PublishNodeDrawerBase : GenericNodeDrawer<PublishNode,PublishNodeViewModel> {
        
        public PublishNodeDrawerBase(PublishNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class UserMethodNodeDrawerBase : GenericNodeDrawer<UserMethodNode,UserMethodNodeViewModel> {
        
        public UserMethodNodeDrawerBase(UserMethodNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ConditionNodeDrawerBase : GenericNodeDrawer<ConditionNode,ConditionNodeViewModel> {
        
        public ConditionNodeDrawerBase(ConditionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class LoopNodeDrawerBase : GenericNodeDrawer<LoopNode,LoopNodeViewModel> {
        
        public LoopNodeDrawerBase(LoopNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IfNodeDrawerBase : GenericNodeDrawer<IfNode,IfNodeViewModel> {
        
        public IfNodeDrawerBase(IfNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IfNotNodeDrawerBase : GenericNodeDrawer<IfNotNode,IfNotNodeViewModel> {
        
        public IfNotNodeDrawerBase(IfNotNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IsNullNodeDrawerBase : GenericNodeDrawer<IsNullNode,IsNullNodeViewModel> {
        
        public IsNullNodeDrawerBase(IsNullNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class IsNotNullNodeDrawerBase : GenericNodeDrawer<IsNotNullNode,IsNotNullNodeViewModel> {
        
        public IsNotNullNodeDrawerBase(IsNotNullNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ActionNodeDrawerBase : GenericNodeDrawer<ActionNode,ActionNodeViewModel> {
        
        public ActionNodeDrawerBase(ActionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class MatcherNodeDrawerBase : GenericNodeDrawer<MatcherNode,MatcherNodeViewModel> {
        
        public MatcherNodeDrawerBase(MatcherNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class MatchAllNodeDrawerBase : GenericNodeDrawer<MatchAllNode,MatchAllNodeViewModel> {
        
        public MatchAllNodeDrawerBase(MatchAllNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class MatchAnyNodeDrawerBase : GenericNodeDrawer<MatchAnyNode,MatchAnyNodeViewModel> {
        
        public MatchAnyNodeDrawerBase(MatchAnyNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class CustomMatcherNodeDrawerBase : GenericNodeDrawer<CustomMatcherNode,CustomMatcherNodeViewModel> {
        
        public CustomMatcherNodeDrawerBase(CustomMatcherNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class OnEventNodeDrawerBase : GenericNodeDrawer<OnEventNode,OnEventNodeViewModel> {
        
        public OnEventNodeDrawerBase(OnEventNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EachComponentNodeDrawerBase : GenericNodeDrawer<EachComponentNode,EachComponentNodeViewModel> {
        
        public EachComponentNodeDrawerBase(EachComponentNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ComponentGroupNodeDrawerBase : GenericNodeDrawer<ComponentGroupNode,ComponentGroupNodeViewModel> {
        
        public ComponentGroupNodeDrawerBase(ComponentGroupNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class AddComponentNodeDrawerBase : GenericNodeDrawer<AddComponentNode,AddComponentNodeViewModel> {
        
        public AddComponentNodeDrawerBase(AddComponentNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class RemoveComponentNodeDrawerBase : GenericNodeDrawer<RemoveComponentNode,RemoveComponentNodeViewModel> {
        
        public RemoveComponentNodeDrawerBase(RemoveComponentNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class ComponentFilterNodeDrawerBase : GenericNodeDrawer<ComponentFilterNode,ComponentFilterNodeViewModel> {
        
        public ComponentFilterNodeDrawerBase(ComponentFilterNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class EqualNodeDrawerBase : GenericNodeDrawer<EqualNode,EqualNodeViewModel> {
        
        public EqualNodeDrawerBase(EqualNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class FilterExpressionNodeDrawerBase : GenericNodeDrawer<FilterExpressionNode,FilterExpressionNodeViewModel> {
        
        public FilterExpressionNodeDrawerBase(FilterExpressionNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class VariableNodeDrawerBase : GenericNodeDrawer<VariableNode,VariableNodeViewModel> {
        
        public VariableNodeDrawerBase(VariableNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
    
    public class FilterNodeDrawerBase : GenericNodeDrawer<FilterNode,FilterNodeViewModel> {
        
        public FilterNodeDrawerBase(FilterNodeViewModel viewModel) : 
                base(viewModel) {
        }
    }
}
